
//SUPERCLASE ELECTRODOMESTICOS

public class electrodomestico {
	
	


	//Atributos de superclase que se pueden heredar en las subclases
	protected static String color;
	protected static double precio;
	protected static int peso;
	protected static char consumoElectrico;
	//Valores por defecto
	protected static final String colorDef="BLANCO";
	protected static final char consumoDef='F';
	protected static final int pesoDef=5;
	protected static final double precioDef=100;
	
	//Constructor con valores por defecto en el constructor
	public electrodomestico() {
		this.color=colorDef;
		this.consumoElectrico=consumoDef;
		this.precio=precioDef;
		this.peso=pesoDef;
	}
	//Constructor con precio y peso por parámetro y el resto por defecto
	public electrodomestico(double precio,int peso) {
		this.color=colorDef;
		this.consumoElectrico=consumoDef;
		
	}
	public electrodomestico(String color,char consumoElectrico, double precio,int peso) {
	
		this.precio=precio;
		this.peso=peso;
		comprobarConsumoEnergetico(consumoElectrico);
		comprobarColor(color);
	}
	//Métodos getter de todos los atributos
	
	protected String getColor() {
		return color;
	}
	protected double getPrecio() {
		return precio;
	}
	protected int getPeso() {
		return peso;
	}
	protected char getConsumoElectrico() {
		return consumoElectrico;
	}

	public void comprobarConsumoEnergetico(char consumoElectrico){
		//Método que comprueba si la letra del consumo energético es correcto
		if((consumoElectrico=='A')||(consumoElectrico=='a')||(consumoElectrico=='B')||(consumoElectrico=='b')||(consumoElectrico=='C')||(consumoElectrico=='c')||(consumoElectrico=='d')||(consumoElectrico=='D')||(consumoElectrico=='E')||(consumoElectrico=='e')||(consumoElectrico=='f')||(consumoElectrico=='F')){
			System.out.println("El código es correcto");
		}else {
			System.err.println("El código no es correcto");
		}
	}
	
	public void comprobarColor(String color) {
		//Método que comprueba si el color es el correcto
		if((color.equals("blanco"))||(color.equals("BLANCO"))||(color.equals("negro"))||(color.equals("NEGRO"))||(color.equals("rojo"))||(color.equals("ROJO"))||(color.equals("AZUL"))||(color.equals("azul"))||(color.equals("GRIS"))||(color.equals("gris"))) {
			System.out.println("El color es correcto, y está dentro de nuestro catálogo");
			
		}else {
			System.err.println("El color es erróneo, no está dentro de nuestra bbdd");
		}
	}
	
	public double PrecioFinal() {
		//Método que aumenta el precio según el consumo energético
		if((consumoElectrico=='A')||(consumoElectrico=='a')) {
			this.precio=this.precio+100;
			System.out.println("El precio final es "+precio);
		}else if ((consumoElectrico=='B')||(consumoElectrico=='b')) {
			this.precio=this.precio+80;
			System.out.println("El precio final es "+precio);
		}else if ((consumoElectrico=='C')||(consumoElectrico=='c')) {
			this.precio=this.precio+60;
			System.out.println("El precio final es "+precio);
		}else if ((consumoElectrico=='D')||(consumoElectrico=='d')) {
			this.precio=this.precio+50;
			System.out.println("El precio final es "+precio);
		}else if ((consumoElectrico=='E')||(consumoElectrico=='e')) {
			this.precio=this.precio+30;
			System.out.println("El precio final es "+precio);
		}else if ((consumoElectrico=='F')||(consumoElectrico=='f')) {
			this.precio=this.precio+10;
			System.out.println("El precio final es "+precio);
			
		}else {
			this.precio=precioDef;
			System.err.println("El precio asignado es el de defecto "+this.precio);
		}
		
		   if(this.peso>=0 && this.peso<19){
	            this.precio+=10;
	        }else if(this.peso>=20 && this.peso<49){
	            this.precio+=50;
	        }else if(this.peso>=50 && this.peso<=79){
	            this.precio+=80;
	        }else if(this.peso>=80){
	            this.precio+=100;
	        }
	   
			return this.precio;
		
	}
	

}
